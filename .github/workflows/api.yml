name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.4"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get commit info and files
      id: commit_info
      run: |
        COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
        COMMIT_DATE=$(git log -1 --pretty=format:"%ad")
        COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        MODIFIED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD | tr '\n' ', ')
        echo "COMMIT_AUTHOR=$COMMIT_AUTHOR" >> $GITHUB_ENV
        echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV

    - name: Run Flask API in the background
      run: |
        nohup python app.py &

    - name: Wait for Flask to start
      run: sleep 10  # Attendre que l'API d√©marre

    - name: Test the Classification API
      run: |
        curl -X POST http://127.0.0.1:5000/predict/classification \
          -H "Content-Type: application/json" \
          -d '{
            "features": {
              "Year": 2024,
              "Month": 12,
              "Day": 3,
              "Author": "${{ env.COMMIT_AUTHOR }}",
              "message": "${{ env.COMMIT_MESSAGE }}",
              "modified_files": "${{ env.MODIFIED_FILES }}",
              "functions": "test_function1 test_function2"
            }
          }'
